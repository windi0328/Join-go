@model JoinGo.Models.ViewModels.ForgotPasswordVM


<h2 class="h4 fw-bold text-center mb-3">重設密碼</h2>

@using (Html.BeginForm("ResetPassword", "Home", FormMethod.Post, new { id = "ResetPasswordForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Token)


    <!-- 新密碼 -->
    <div class="mb-4">
        <div class="input-group">
            <span class="input-group-text bg-light text-muted">
                <i class="fa fa-lock"></i>
            </span>
            <input type="password" class="form-control" id="NewPassword" name="NewPassword" placeholder="請輸入新密碼" required>
            <span class="input-group-text bg-light text-muted toggle-password cursor-pointer" toggle="#NewPassword" style="user-select:none;">
                <i class="fa fa-eye"></i>
            </span>
        </div>
        <div class="invalid-feedback"></div>
    </div>

    <!-- 確認新密碼 -->
    <div class="mb-4">
        <div class="input-group">
            <span class="input-group-text bg-light text-muted">
                <i class="fa fa-lock"></i>
            </span>
            <input type="password" class="form-control" id="ConfirmPassword" name="ConfirmPassword" placeholder="請再次輸入新密碼" required>
            <span class="input-group-text bg-light text-muted toggle-password cursor-pointer" toggle="#ConfirmPassword" style="user-select:none;">
                <i class="fa fa-eye"></i>
            </span>
        </div>
        <div class="invalid-feedback"></div>
    </div>


    <button type="submit" class="btn btn-success w-100">重設密碼</button>
}

<script>
    // ===== 驗證輔助函式 =====
    // 錯誤顯示
    function setError(selector, message) {
        $(selector).addClass('is-invalid');
        $(selector).closest('.mb-4').find('.invalid-feedback')
            .text(message)
            .show();
    }

    // 清除錯誤
    function clearError(selector) {
        $(selector).removeClass('is-invalid');
        $(selector).closest('.mb-4').find('.invalid-feedback').text('').hide();
    }



    // 密碼強度驗證（至少三種：大小寫、數字、特殊字元）
    function isValidPassword(pwd) {
        if (pwd.length < 8) return false;
        let types = 0;
        if (/[A-Z]/.test(pwd)) types++;       // 大寫
        if (/[a-z]/.test(pwd)) types++;       // 小寫
        if (/\d/.test(pwd)) types++;          // 數字
        if (/[^A-Za-z0-9]/.test(pwd)) types++; // 特殊符號
        return types >= 3;
    }







    // ===== 主程式 =====
    $(document).ready(function () {
        $('#NewPassword').on('blur', function () {
            const val = $(this).val();
            if (!val) setError(this, '新密碼為必填');
            else if (!isValidPassword(val)) setError(this, '密碼至少8碼，需包含大寫、小寫、數字、特殊符號中的三種');
            else clearError(this);
        });


        $('#ConfirmPassword').on('blur', function () {
            const pwd = $('#NewPassword').val();
            const val = $(this).val();
            if (!val) setError(this, '請再次輸入新密碼');
            else if (pwd !== val) setError(this, '兩次密碼輸入不一致');
            else clearError(this);
        });

        // --- 密碼眼睛切換 ---
        $('.toggle-password').click(function () {
            var inputSelector = $(this).attr('toggle');
            var input = $(inputSelector);
            var icon = $(this).find('i');

            if (input.attr('type') === 'password') {
                input.attr('type', 'text');
                icon.removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                input.attr('type', 'password');
                icon.removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });





        // 表單提交處理
        $('#submitBtn').on('click', function (e) {
            e.preventDefault();

            var form = $('#EditPersonalForm')[0]; // 原生表單元素
            var formData = new FormData(form);   // 用 FormData 包含檔案

            $.ajax({
                url: $('#EditPersonalForm').attr('action'),
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.Result === true) {
                        Swal.fire({
                            icon: 'success',
                            title: response.Message
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: response.Message,
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: '系統錯誤',
                        text: '請檢查網路連線或重新整理頁面'
                    });
                }
            });
        });






        // --- submit 驗證 ---
        $('#ResetPasswordForm').on('submit', function (e) {
            e.preventDefault();

            // 清空錯誤
            $(this).find('input').removeClass('is-invalid');
            $(this).find('.invalid-feedback').text('').hide();

            let isValid = true;
            const password = $('#NewPassword').val();
            const confirmPassword = $('#ConfirmPassword').val();

            if (!password) {
                setError('#NewPassword', '新密碼為必填');
                isValid = false;
            } else if (!isValidPassword(password)) {
                setError('#NewPassword', '新密碼至少8碼，需包含大寫、小寫、數字、特殊符號中的三種');
                isValid = false;
            }

            if (!confirmPassword) {
                setError('#confirmPassword', '請再次輸入密碼');
                isValid = false;
            } else if (confirmPassword !== password) {
                setError('#confirmPassword', '兩次密碼輸入不一致');
                isValid = false;
            }



            if (isValid) {
                // 設定已送出，防止重複送出
                $(this).data('submitted', true);

                // 可以把送出按鈕禁用，避免使用者還是一直點
                $(this).find('button[type="submit"]').prop('disabled', true);

                this.submit(); // 真正送出表單
            }
        });
    });
</script>

